' Archimate-PlantUML

' Version
'######################################
!function ArchimateVersion()
  !$archimateVersion  =  "2.0.0beta1"
  !return $archimateVersion
!endfunction

!procedure ArchimateVersionDetails()
  rectangle ArchimateVersionDetailsArea <<legendArea>> [
  | PlantUML | **%version()** |
  | Archimate-PlantUML | **ArchimateVersion()** |
  ]
!endprocedure

' Styling
'######################################

!$STRATEGY_FILLCOLOR = "#STRATEGY"
!$BUSINESS_FILLCOLOR = "#BUSINESS"
!$APPLICATION_FILLCOLOR = "#APPLICATION"
!$TECHNOLOGY_FILLCOLOR = "#TECHNOLOGY"
!$PHYSICAL_FILLCOLOR = "#PHYSICAL"
!$MOTIVATION_FILLCOLOR = "#MOTIVATION"
!$IMPLEMENTATION_FILLCOLOR = "#IMPLEMENTATION"
!$OTHER_FILLCOLOR = "#ffb973"
!$JUNCTIONOR_FILLCOLOR = "#WhiteSmoke"
!$JUNCTIONAND_FILLCOLOR = "#Black"
!$GROUP_FILLCOLOR = "#LightGrey"
!$FOLDER_LINECOLOR = "#444444"
!$RELATIONSHIP_LINECOLOR = "#Black"
!$RELATIONSHIP_FONTCOLOR = "#Black"
!$RELATIONSHIP_FONTSIZE = 10


skinparam defaultFontName       "Verdana"
skinparam defaultFontSize       12
skinparam defaultTextAlignment  center
skinparam wrapWidth             600
skinparam maxMessageSize        150
skinparam StereotypeAlignment   right

skinparam Arrow {
    Color     $RELATIONSHIP_LINECOLOR
    FontColor $RELATIONSHIP_FONTCOLOR
    FontSize  $RELATIONSHIP_FONTSIZE
}
skinparam Folder<<grouping>> {
    Shadowing true
    StereotypeFontSize 0
    FontColor #444444
    BorderColor $FOLDER_LINECOLOR
    BorderStyle dashed
}
skinparam Folder<<group>> {
    Shadowing true
    StereotypeFontSize 0
    FontColor #444444
    BackgroundColor $GROUP_FILLCOLOR
}
skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 0
    FontColor #444444
    BorderColor $FOLDER_LINECOLOR
    BorderStyle dashed
}
skinparam node {
  StereotypeAlignment right
}
skinparam cloud {
  StereotypeAlignment right
}
skinparam frame {
  StereotypeAlignment right
}
skinparam archimate {
  StereotypeAlignment right
  RoundCorner<<strategy-capability>> 25
  RoundCorner<<strategy-course-of-action>> 25
  RoundCorner<<strategy-value-stream>> 25
  RoundCorner<<business-process>> 25
  RoundCorner<<business-event>> 25
  RoundCorner<<business-function>> 25
  RoundCorner<<business-interaction>> 25
  RoundCorner<<business-event>> 25
  RoundCorner<<business-service>> 25
  RoundCorner<<application-function>> 25
  RoundCorner<<application-interaction>> 25
  RoundCorner<<application-process>> 25
  RoundCorner<<application-event>> 25
  RoundCorner<<application-service>> 25
  RoundCorner<<technology-function>> 25
  RoundCorner<<technology-process>> 25
  RoundCorner<<technology-interaction>> 25
  RoundCorner<<technology-event>> 25
  RoundCorner<<technology-infra-service>> 25
  RoundCorner<<implementation-workpackage>> 25
  RoundCorner<<implementation-event>> 25
  DiagonalCorner<<motivation-stakeholder>> 12
  DiagonalCorner<<motivation-driver>> 12
  DiagonalCorner<<motivation-assessment>> 12
  DiagonalCorner<<motivation-goal>> 12
  DiagonalCorner<<motivation-outcome>> 12
  DiagonalCorner<<motivation-principle>> 12
  DiagonalCorner<<motivation-requirement>> 12
  DiagonalCorner<<motivation-constraint>> 12
}
skinparam usecase {
  BorderColor #000000
}

' Layout
' ##################################
!definelong LAYOUT_AS_SKETCH
    skinparam backgroundColor #EEEBDC
    skinparam handwritten true
    skinparam defaultFontName "Comic Sans MS"
    center footer <font color=red>Warning:</font> Created for discussion, needs to be validated
!enddefinelong
!define LAYOUT_TOP_DOWN top to bottom direction
!define LAYOUT_LEFT_RIGHT left to right direction

' Layout Helpers
' ##################################
!define Lay_D(e_from, e_to) e_from -[hidden]D- e_to
!define Lay_U(e_from, e_to) e_from -[hidden]U- e_to
!define Lay_R(e_from, e_to) e_from -[hidden]R- e_to
!define Lay_L(e_from, e_to) e_from -[hidden]L- e_to

' Boundaries
' ##################################
!define Boundary(e_alias, e_label) rectangle "==e_label" <<boundary>> as e_alias
!define Boundary(e_alias, e_label, e_type) rectangle "==e_label\n<size:TECHN_FONT_SIZE>[e_type]</size>" <<boundary>> as e_alias

' Elements
' ##################################

'Strategy Elements
!unquoted procedure Strategy_Resource($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $STRATEGY_FILLCOLOR "$label" <<strategy-resource>> as $alias
  !else
    rectangle "$label" <<$archimate/strategy-resource>> as $alias $STRATEGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Strategy_Capability($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $STRATEGY_FILLCOLOR "$label" <<strategy-capability>> as $alias 
  !else
    rectangle "$label" <<$archimate/strategy-capability>> as $alias $STRATEGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Strategy_CourseOfAction($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $STRATEGY_FILLCOLOR "$label" <<strategy-course-of-action>> as $alias
  !else
    rectangle "$label" <<$archimate/strategy-course-of-action>> as $alias $STRATEGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Strategy_ValueStream($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $STRATEGY_FILLCOLOR "$label" <<strategy-value-stream>> as $alias
  !else
    rectangle "$label" <<$archimate/strategy-value-stream>> as $alias $STRATEGY_FILLCOLOR
  !endif
!endprocedure

'Business Elements
!unquoted procedure Business_Actor($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-actor>> as $alias
  !else
    rectangle "$label" <<$archimate/business-actor>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Role($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-role>> as $alias
  !else
    rectangle "$label" <<$archimate/business-role>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Collaboration($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-collaboration>> as $alias
  !else
    rectangle "$label" <<$archimate/business-collaboration>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Interface($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-interface>> as $alias
  !else
    rectangle "$label" <<$archimate/business-interface>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Process($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-process>> as $alias
  !else
    rectangle "$label" <<$archimate/business-process>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Function($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-function>> as $alias
  !else
    rectangle "$label" <<$archimate/business-function>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Interaction($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-interaction>> as $alias
  !else
    rectangle "$label" <<$archimate/business-interaction>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Event($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-event>> as $alias
  !else
    rectangle "$label" <<$archimate/business-event>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Service($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-service>> as $alias
  !else
    rectangle "$label" <<$archimate/business-service>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Object($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-object>> as $alias
  !else
    rectangle "$label" <<$archimate/business-object>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Contract($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-contract>> as $alias
  !else
    rectangle "$label" <<$archimate/business-contract>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Representation($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-representation>> as $alias
  !else
    rectangle "$label" <<$archimate/business-representation>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Product($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-product>> as $alias
  !else
    rectangle "$label" <<$archimate/business-product>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Business_Location($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $BUSINESS_FILLCOLOR "$label" <<business-location>> as $alias
  !else
    rectangle "$label" <<$archimate/business-location>> as $alias $BUSINESS_FILLCOLOR
  !endif
!endprocedure

'Application Elements
!unquoted procedure Application_Component($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-component>> as $alias
  !else
    rectangle "$label" <<$archimate/application-component>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_Collaboration($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-collaboration>> as $alias
  !else
    rectangle "$label" <<$archimate/application-collaboration>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_Interface($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-interface>> as $alias
  !else
    rectangle "$label" <<$archimate/application-interface>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_Function($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-function>> as $alias
  !else
    rectangle "$label" <<$archimate/application-function>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_Interaction($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-interaction>> as $alias
  !else
    rectangle "$label" <<$archimate/application-interaction>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_Process($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-process>> as $alias
  !else
    rectangle "$label" <<$archimate/application-process>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_Event($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-event>> as $alias
  !else
    rectangle "$label" <<$archimate/application-event>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_Service($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-service>> as $alias
  !else
    rectangle "$label" <<$archimate/application-service>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Application_DataObject($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $APPLICATION_FILLCOLOR "$label" <<application-data-object>> as $alias
  !else
    rectangle "$label" <<$archimate/application-data-object>> as $alias $APPLICATION_FILLCOLOR
  !endif
!endprocedure

'Technology Elements
!unquoted procedure Technology_Node($alias, $label, $nest=0)
  !if ($nest == %false())
    node $TECHNOLOGY_FILLCOLOR "$label" <<$archimate/technology-node>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-node>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Device($alias, $label, $nest=0)
  !if ($nest == %false())
    node $TECHNOLOGY_FILLCOLOR "$label" <<$archimate/technology-device>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-device>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_SystemSoftware($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-system-software>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-system-software>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Collaboration($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-collaboration>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-collaboration>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Interface($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-infra-interface>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-infra-interface>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Path($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-communication-path>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-communication-path>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_CommunicationNetwork($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-network>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-network>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Function($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-function>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-function>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Process($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-process>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-process>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Interaction($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-interaction>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-interaction>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Event($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-event>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-event>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Service($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-infra-service>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-infra-service>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Technology_Artifact($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $TECHNOLOGY_FILLCOLOR "$label" <<technology-artifact>> as $alias
  !else
    rectangle "$label" <<$archimate/technology-artifact>> as $alias $TECHNOLOGY_FILLCOLOR
  !endif
!endprocedure

'Physical Elements
!unquoted procedure Physical_Equipment($alias, $label, $nest=0)
  !if ($nest == %false())
    node $PHYSICAL_FILLCOLOR "$label" <<$archimate/physical-equipment>> as $alias
  !else
    rectangle "$label" <<$archimate/physical-equipment>> as $alias $PHYSICAL_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Physical_Facility($alias, $label, $nest=0)
  !if ($nest == %false())
    node $PHYSICAL_FILLCOLOR "$label" <<$archimate/physical-facility>> as $alias
  !else
    rectangle "$label" <<$archimate/physical-facility>> as $alias $PHYSICAL_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Physical_DistributionNetwork($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $PHYSICAL_FILLCOLOR "$label" <<physical-distribution-network>> as $alias
  !else
    rectangle "$label" <<$archimate/physical-distribution-network>> as $alias $PHYSICAL_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Physical_Material($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $PHYSICAL_FILLCOLOR "$label" <<physical-material>> as $alias
  !else
    rectangle "$label" <<$archimate/physical-material>> as $alias $PHYSICAL_FILLCOLOR
  !endif
!endprocedure

'Motivation Elements
!unquoted procedure Motivation_Stakeholder($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-stakeholder>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-stakeholder>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Driver($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-driver>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-driver>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Assessment($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-assessment>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-assessment>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Goal($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-goal>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-goal>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Outcome($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-outcome>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-outcome>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Principle($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-principle>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-principle>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Requirement($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-requirement>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-requirement>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Constraint($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-constraint>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-constraint>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Meaning($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-meaning>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-meaning>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Motivation_Value($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $MOTIVATION_FILLCOLOR "$label" <<motivation-value>> as $alias
  !else
    rectangle "$label" <<$archimate/motivation-value>> as $alias $MOTIVATION_FILLCOLOR
  !endif
!endprocedure

'Implementation Elements
!unquoted procedure Implementation_WorkPackage($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $IMPLEMENTATION_FILLCOLOR "$label" <<implementation-workpackage>> as $alias
  !else
    rectangle "$label" <<$archimate/implementation-workpackage>> as $alias $IMPLEMENTATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Implementation_Deliverable($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $IMPLEMENTATION_FILLCOLOR "$label" <<implementation-deliverable>> as $alias
  !else
    rectangle "$label" <<$archimate/implementation-deliverable>> as $alias $IMPLEMENTATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Implementation_Event($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $IMPLEMENTATION_FILLCOLOR "$label" <<implementation-event>> as $alias
  !else
    rectangle "$label" <<$archimate/implementation-event>> as $alias $IMPLEMENTATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Implementation_Plateau($alias, $label, $nest=0)
  !if ($nest == %false())
    node $IMPLEMENTATION_FILLCOLOR "$label" <<$archimate/implementation-plateau>> as $alias
  !else
    rectangle "$label" <<$archimate/implementation-plateau>> as $alias $IMPLEMENTATION_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Implementation_Gap($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $IMPLEMENTATION_FILLCOLOR "$label" <<implementation-gap>> as $alias
  !else
    rectangle "$label" <<$archimate/implementation-gap>> as $alias $IMPLEMENTATION_FILLCOLOR
  !endif
!endprocedure

'Other Elements
!unquoted procedure Other_Location($alias, $label, $nest=0)
  !if ($nest == %false())
    archimate $OTHER_FILLCOLOR "$label" <<location>> as $alias
  !else
    rectangle "$label" <<$archimate/location>> as $alias $OTHER_FILLCOLOR
  !endif
!endprocedure
!unquoted procedure Junction_Or($alias, $label)
  circle $JUNCTIONOR_FILLCOLOR "$label" as $alias
!endprocedure
!unquoted procedure Junction_And($alias, $label)
  circle $JUNCTIONAND_FILLCOLOR "$label" as $alias
!endprocedure
!unquoted procedure Grouping($alias, $label)
  Folder "$label" <<grouping>> as $alias
!endprocedure
!unquoted procedure Group($alias, $label)
  Folder "$label" <<group>> as $alias
!endprocedure

' Relationships
' ##################################
!unquoted procedure Rel_($sourceAlias, $targetAlias, $label, $direction="")
  $sourceAlias $direction $targetAlias : "$label"
!endprocedure

!unquoted procedure Rel_Composition($From, $To, $label="") 
  Rel_($From, $To, $label, "*--")
!endprocedure
!unquoted procedure Rel_Composition_Up($From, $To, $label="") 
  Rel_($From, $To, $label, "*-UP-")
!endprocedure
!unquoted procedure Rel_Composition_Down($From, $To, $label="") 
  Rel_($From, $To, $label, "*-DOWN-")
!endprocedure
!unquoted procedure Rel_Composition_Left($From, $To, $label="") 
  Rel_($From, $To, $label, "*-LEFT-")
!endprocedure
!unquoted procedure Rel_Composition_Right($From, $To, $label="") 
  Rel_($From, $To, $label, "*-RIGHT-")
!endprocedure

!unquoted procedure Rel_Aggregation($From, $To, $label="")
  Rel_($From, $To, $label, "o--")
!endprocedure
!unquoted procedure Rel_Aggregation_Up($From, $To, $label="")
  Rel_($From, $To, $label, "o-UP-")
!endprocedure
!unquoted procedure Rel_Aggregation_Down($From, $To, $label="")
  Rel_($From, $To, $label, "o-DOWN-")
!endprocedure
!unquoted procedure Rel_Aggregation_Left($From, $To, $label="")
  Rel_($From, $To, $label, "o-LEFT-")
!endprocedure
!unquoted procedure Rel_Aggregation_Right($From, $To, $label="")
  Rel_($From, $To, $label, "o-RIGHT-")
!endprocedure

!unquoted procedure Rel_Assignment($From, $To, $label="")
  Rel_($From, $To, $label, "@-->>")
!endprocedure
!unquoted procedure Rel_Assignment_Up($From, $To, $label="")
  Rel_($From, $To, $label, "@-UP->>")
!endprocedure
!unquoted procedure Rel_Assignment_Down($From, $To, $label="")
  Rel_($From, $To, $label, "@-DOWN->>")
!endprocedure
!unquoted procedure Rel_Assignment_Left($From, $To, $label="")
  Rel_($From, $To, $label, "@-LEFT->>")
!endprocedure
!unquoted procedure Rel_Assignment_Right($From, $To, $label="")
  Rel_($From, $To, $label, "@-RIGHT->>")
!endprocedure

!unquoted procedure Rel_Specialization($From, $To, $label="")
  Rel_($From, $To, $label, "--|>")
!endprocedure
!unquoted procedure Rel_Specialization_Up($From, $To, $label="")
  Rel_($From, $To, $label, "-UP-|>")
!endprocedure
!unquoted procedure Rel_Specialization_Down($From, $To, $label="")
  Rel_($From, $To, $label, "-DOWN-|>")
!endprocedure
!unquoted procedure Rel_Specialization_Left($From, $To, $label="")
  Rel_($From, $To, $label, "-LEFT-|>")
!endprocedure
!unquoted procedure Rel_Specialization_Right($From, $To, $label="")
  Rel_($From, $To, $label, "-RIGHT-|>")
!endprocedure

!unquoted procedure Rel_Serving($From, $To, $label="")
  Rel_($From, $To, $label, "-->")
!endprocedure
!unquoted procedure Rel_Serving_Up($From, $To, $label="")
  Rel_($From, $To, $label, "-UP->")
!endprocedure
!unquoted procedure Rel_Serving_Down($From, $To, $label="")
  Rel_($From, $To, $label, "-DOWN->")
!endprocedure
!unquoted procedure Rel_Serving_Left($From, $To, $label="")
  Rel_($From, $To, $label, "-LEFT->")
!endprocedure
!unquoted procedure Rel_Serving_Right($From, $To, $label="")
  Rel_($From, $To, $label, "-RIGHT->")
!endprocedure

!unquoted procedure Rel_Association($From, $To, $label="")
  Rel_($From, $To, $label, "==")
!endprocedure
!unquoted procedure Rel_Association_Up($From, $To, $label="")
  Rel_($From, $To, $label, "=UP=")
!endprocedure
!unquoted procedure Rel_Association_Down($From, $To, $label="")
  Rel_($From, $To, $label, "=DOWN=")
!endprocedure
!unquoted procedure Rel_Association_Left($From, $To, $label="")
  Rel_($From, $To, $label, "=LEFT=")
!endprocedure
!unquoted procedure Rel_Association_Right($From, $To, $label="")
  Rel_($From, $To, $label, "=RIGHT=")
!endprocedure

!unquoted procedure Rel_Association_dir($From, $To, $label="")
  Rel_($From, $To, $label, "==>")
!endprocedure
!unquoted procedure Rel_Association_dir_Up($From, $To, $label="")
  Rel_($From, $To, $label, "=UP=>")
!endprocedure
!unquoted procedure Rel_Association_dir_Down($From, $To, $label="")
  Rel_($From, $To, $label, "=DOWN=>")
!endprocedure
!unquoted procedure Rel_Association_dir_Left($From, $To, $label="")
  Rel_($From, $To, $label, "=LEFT=>")
!endprocedure
!unquoted procedure Rel_Association_dir_Right($From, $To, $label="")
  Rel_($From, $To, $label, "=RIGHT=>")
!endprocedure

!unquoted procedure Rel_Flow($From, $To, $label="")
  Rel_($From, $To, $label, "..>>")
!endprocedure
!unquoted procedure Rel_Flow_Up($From, $To, $label="")
  Rel_($From, $To, $label, ".UP.>>")
!endprocedure
!unquoted procedure Rel_Flow_Down($From, $To, $label="")
  Rel_($From, $To, $label, ".DOWN.>>")
!endprocedure
!unquoted procedure Rel_Flow_Left($From, $To, $label="")
  Rel_($From, $To, $label, ".LEFT.>>")
!endprocedure
!unquoted procedure Rel_Flow_Right($From, $To, $label="")
  Rel_($From, $To, $label, ".RIGHT.>>")
!endprocedure

!unquoted procedure Rel_Realization($From, $To, $label="")
  Rel_($From, $To, $label, "~~|>")
!endprocedure
!unquoted procedure Rel_Realization_Up($From, $To, $label="")
  Rel_($From, $To, $label, "~UP~|>")
!endprocedure
!unquoted procedure Rel_Realization_Down($From, $To, $label="")
  Rel_($From, $To, $label, "~DOWN~|>")
!endprocedure
!unquoted procedure Rel_Realization_Left($From, $To, $label="")
  Rel_($From, $To, $label, "~LEFT~|>")
!endprocedure
!unquoted procedure Rel_Realization_Right($From, $To, $label="")
  Rel_($From, $To, $label, "~RIGHT~|>")
!endprocedure

!unquoted procedure Rel_Triggering($From, $To, $label="")
  Rel_($From, $To, $label, "-->>")
!endprocedure
!unquoted procedure Rel_Triggering_Up($From, $To, $label="")
  Rel_($From, $To, $label, "-UP->>")
!endprocedure
!unquoted procedure Rel_Triggering_Down($From, $To, $label="")
  Rel_($From, $To, $label, "-DOWN->>")
!endprocedure
!unquoted procedure Rel_Triggering_Left($From, $To, $label="")
  Rel_($From, $To, $label, "-LEFT->>")
!endprocedure
!unquoted procedure Rel_Triggering_Right($From, $To, $label="")
  Rel_($From, $To, $label, "-RIGHT->>")
!endprocedure

!unquoted procedure Rel_Access($From, $To, $label="")
  Rel_($From, $To, $label, "~~")
!endprocedure
!unquoted procedure Rel_Access_Up($From, $To, $label="")
  Rel_($From, $To, $label, "~UP~")
!endprocedure
!unquoted procedure Rel_Access_Down($From, $To, $label="")
  Rel_($From, $To, $label, "~DOWN~")
!endprocedure
!unquoted procedure Rel_Access_Left($From, $To, $label="")
  Rel_($From, $To, $label, "~LEFT~")
!endprocedure
!unquoted procedure Rel_Access_Right($From, $To, $label="")
  Rel_($From, $To, $label, "~RIGHT~")
!endprocedure

!unquoted procedure Rel_Access_r($From, $To, $label="")
  Rel_($From, $To, $label, "<-~")
!endprocedure
!unquoted procedure Rel_Access_r_Up($From, $To, $label="")
  Rel_($From, $To, $label, "<-UP~")
!endprocedure
!unquoted procedure Rel_Access_r_Down($From, $To, $label="")
  Rel_($From, $To, $label, "<-DOWN~")
!endprocedure
!unquoted procedure Rel_Access_r_Left($From, $To, $label="")
  Rel_($From, $To, $label, "<-LEFT~")
!endprocedure
!unquoted procedure Rel_Access_r_Right($From, $To, $label="")
  Rel_($From, $To, $label, "<-RIGHT~")
!endprocedure

!unquoted procedure Rel_Access_rw($From, $To, $label="")
  Rel_($From, $To, $label, "<~~>")
!endprocedure
!unquoted procedure Rel_Access_rw_Up($From, $To, $label="")
  Rel_($From, $To, $label, "<~UP~>")
!endprocedure
!unquoted procedure Rel_Access_rw_Down($From, $To, $label="")
  Rel_($From, $To, $label, "<~DOWN~>")
!endprocedure
!unquoted procedure Rel_Access_rw_Left($From, $To, $label="")
  Rel_($From, $To, $label, "<~LEFT~>")
!endprocedure
!unquoted procedure Rel_Access_rw_Right($From, $To, $label="")
  Rel_($From, $To, $label, "<~RIGHT~>")
!endprocedure

!unquoted procedure Rel_Access_w($From, $To, $label="")
  Rel_($From, $To, $label, "~->")
!endprocedure
!unquoted procedure Rel_Access_w_Up($From, $To, $label="")
  Rel_($From, $To, $label, "~UP->")
!endprocedure
!unquoted procedure Rel_Access_w_Down($From, $To, $label="")
  Rel_($From, $To, $label, "~DOWN->")
!endprocedure
!unquoted procedure Rel_Access_w_Left($From, $To, $label="")
  Rel_($From, $To, $label, "~LEFT->")
!endprocedure
!unquoted procedure Rel_Access_w_Right($From, $To, $label="")
  Rel_($From, $To, $label, "~RIGHT->")
!endprocedure

!unquoted procedure Rel_Influence($From, $To, $label="")
  Rel_($From, $To, $label, "..>")
!endprocedure
!unquoted procedure Rel_Influence_Up($From, $To, $label="")
  Rel_($From, $To, $label, ".UP.>")
!endprocedure
!unquoted procedure Rel_Influence_Down($From, $To, $label="")
  Rel_($From, $To, $label, ".DOWN.>")
!endprocedure
!unquoted procedure Rel_Influence_Left($From, $To, $label="")
  Rel_($From, $To, $label, ".LEFT.>")
!endprocedure
!unquoted procedure Rel_Influence_Right($From, $To, $label="")
  Rel_($From, $To, $label, ".RIGHT.>")
!endprocedure
