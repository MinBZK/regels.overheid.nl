@prefix ronl: <https://regels.overheid.nl/ronl/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix cpsv-ap: <http://data.europa.eu/m8g/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix ex: <http://example.org/ns#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix isothes: <http://purl.org/iso25964/skos-thes#> .
#
# Declare ronl vocabulary metadata
#
ronl: a skos:ConceptScheme ;
    rdfs:label
        "RONL Vocabulaire"@nl ,
        "RONL Vocabulary"@en ;
    rdfs:comment
        "Vocabulaire voor regels, methoden en concepten in de context van overheidsregulering."@nl ,
        "Vocabulary for rules, methods, and concepts in the context of government regulation."@en ;
    skos:prefLabel
        "Vocabulaire voor regels.overheid.nl"@nl ,
        "Vocabulary for regels.overheid.nl"@en ;
    skos:altLabel
        "ronl"@nl ,
        "ronl"@en ;
    skos:altLabel
        "ronl aangepaste naamruimte"@nl ,
        "ronl custom namespace"@en ;
    skos:definition
        "Een aangepaste naamruimte met onze eigen skos:ConceptScheme om te voorkomen dat informatie in elk afzonderlijk exemplaar van cpsv-ap:PublicService wordt herhaald."@nl ,
        "A custom namespace with our own skos:ConceptScheme to avoid repeating information in each individual cpsv-ap:PublicService instance."@en ,
    skos:hasTopConcept ronl:SpecificationTypeConcept ;
    skos:scopeNote
        "Het doel van deze ronl vocabulaire is om nagenoeg volledige beschrijvingen van regelspecificatie sets te kunnen maken in de vorm van cpsv-ap:PublicService die geschikt zijn voor publicatie op regels.overheid.nl."@nl ,
        "The purpose of this ronl vocabulary is to be able to create nearly complete descriptions of rule specification sets in the form of cpsv-ap:PublicService that are suitable for publication on regels.overheid.nl."@en ;
    dct:creator <https://regels.overheid.nl> ;
    dct:publisher <https://regels.overheid.nl> ;
    dct:language
        "nl" ,
        "en" ;
    dct:license <http://creativecommons.org/licenses/by/4.0/> ;
    dct:source <https://regels.overheid.nl/ronl/ns> .
#
# Define AnalysisConcept as top-level concepts under ronl
#
ronl:AnalysisConcept a isothes:ConceptGroup ;
    rdfs:label
        "RONL Wetsanalyse"@nl ,
        "RONL Legislative analysis"@nl ;
    rdfs:comment
        "Bevat alle voorkomende gevallen van methodieken voor wetsanalyse die bekend zijn."@nl ,
        "Contains all known common cases of methodologies for legal analysis."@en ;
    skos:prefLabel
        "Wetsanalyse Concepten Schema"@nl ,
        "Legislative analysis Concepts Scheme"@en ;
    skos:altLabel
        "wetsanalyse"@nl ,
        "legal analysis"@en ;
    skos:definition
        "Wetsanalyse is een aanpak waarbij alle stappen voor het interpreteren, preciseren en nader invullen van wetgeving expliciet en op een gestructureerde manier worden vastgelegd."@nl ,
        "Legislative analysis is an approach in which all steps for interpreting, specifying and further defining legislation are explicitly and in a structured manner documented."@en ;
    isothes:member ronl:SpecificationTypeConcept ;
    skos:scopeNote
        "Het doel is om een nagenoeg complete verzameling van wetsanalyse methodieken te groeperen zonder daarbij allerlei criteria te hanteren vooraf. Kwalitatieve beoordeling is geen onderdeel van dit concept!"@nl ,
        "The aim is to group a nearly complete collection of legislative analysis methodologies without using all kinds of criteria in advance. Qualitative assessment is not part of this concept!"@en ;
    ronl:source <https://regels.overheid.nl/waardelijsten/ronl:analysis.json> .
#
# Define MethodConcept as top-level concepts under ronl
#
ronl:MethodConcept a isothes:ConceptGroup ;
    rdfs:label
        "RONL Methodieken voor Regelbeheer"@nl ,
        "RONL Methodologies for Rules management"@nl ;
    rdfs:comment
        "Bevat alle voorkomende gevallen van methodieken voor regelbeheer die bekend zijn."@nl ,
        "Contains all known common cases of methodologies for rules management."@en ;
    skos:prefLabel
        "Methodieken voor regelbeheer Concepten Schema"@nl ,
        "Methodologies for rules mannagement Concepts Scheme"@en ;
    skos:altLabel
        "regelbeheer"@nl ,
        "rules management"@en ;
    skos:definition
        "Regelbeheer is het geheel aan methoden, technieken, hulpmiddelen en voorschriften om regels te ontwerpen, analyseren, valideren, verifiëren, uit te rollen, uit te voeren, te beheren en te evalueren"@nl ,
        "Rules management is the set of methods, techniques, tools and regulations for designing, analyzing, validating, verifying, deploying, executing, managing and evaluating rules."@en ;
    isothes:member ronl:SpecificationTypeConcept ;
    skos:scopeNote
        "Het doel is om een nagenoeg complete verzameling van regelbeheer methodieken te groeperen zonder daarbij allerlei criteria te hanteren vooraf. Kwalitatieve beoordeling is geen onderdeel van dit concept!"@nl ,
        "The aim is to group a nearly complete collection of rules management methodologies without using all kinds of criteria in advance. Qualitative assessment is not part of this concept!"@en ;
    ronl:source <https://regels.overheid.nl/waardelijsten/ronl:method.json> .
#
# Define SpecificationTypeConcept as a concept that is narrower under both AnalysisConcept and MethodConcept
#
ronl:SpecificationTypeConcept a skos:Concept ;
    rdfs:label
        "RONL Specificatie soorten"@nl ,
        "RONL Specification types"@nl ;
    rdfs:comment
        "Bevat alle soorten mogelijke documenten die bij elkaar én in onderlinge gekende relatie een complete regelspecificatie set omvatten."@nl ,
        "Contains all types of possible documents that together and in known mutual relationships comprise a complete set of rule specifications."@en ;
    skos:prefLabel
        "Document soorten die in een regelspecificatie set kunnen voorkomen"@nl ,
        "Document types that can appear in a rule specification set"@en ;
    skos:altLabel
        "specificatie soorten"@nl ,
        "specification types"@en ;
    skos:definition
        "Deze document specificatie soorten biedt een gestructureerd raamwerk voor het documenteren en communiceren van de regelspecificatie sets."@nl ,
        "These document specification types provides a structured framework for documenting and communicating the rule specification sets."@en ;
    skos:broader ronl:AnalysisConcept, ronl:MethodConcept ;
    skos:scopeNote
        "De lijst vind zijn herkomst uit De LegitiMaat, een werkmethode voor het doen van onderzoek door derden naar het gebruik van algoritmen door een overheidsorganisatie."@nl ,
        "The list originates from De LegitiMaat, a working method for conducting research by third parties into the use of algorithms by a government organization."@en ;
    ronl:source <https://regels.overheid.nl/waardelijsten/ronl:specification-type.json> .
    rdfs:seeAlso <https://regels.overheid.nl/publicaties/legitimaat#de-legitimaat-documentenlijst>
#
#
# Define ronl:source, ronl:analysis and ronl:method as RDF properties
# use owl:unionOf to specify multiple classes as the domain, ie this will allow both cpsv-ap:PublicService and dcat:Dataset
#
# ronl:source is intended to indicate an authoritative source or origin and can be used across resources in the ronl namespace
#
ronl:source a owl:ObjectProperty ;
    rdfs:label "bron"@nl ;
    rdfs:label "source"@en ;
    rdfs:comment "Een eigenschap om de gezaghebbende bron of oorsprong van een dataset, regelspecificatie of model in de ronl namespace op te geven."@nl ;
    rdfs:comment "A property to specify the authoritative source or origin of a dataset, rule, or model in the ronl namespace."@en ;
    rdfs:domain [ a owl:Class ; owl:unionOf ( cpsv-ap:PublicService dcat:Dataset ) ] ;
    rdfs:range dct:BibliographicResource ;
    rdfs:isDefinedBy <https://regels.overheid.nl/ronl> .

ronl:analysis a owl:ObjectProperty ;
    rdfs:label "analyse"@nl ;
    rdfs:label "analysis"@en ;
    rdfs:comment "Analyse eigenschap voor de regelspecificatie set"@nl ;
    rdfs:comment "Analysis property for the rule set."@en ;
    rdfs:domain [ a owl:Class ; owl:unionOf ( cpsv-ap:PublicService dcat:Dataset ) ] ;
    rdfs:range ronl:AnalysisConcept ;
    rdfs:isDefinedBy <https://regels.overheid.nl/ronl> .

ronl:method a owl:ObjectProperty ;
    rdfs:label "methode"@nl ;
    rdfs:label "method"@en ;
    rdfs:comment "Methode eigenschap voor de regelspecificatie set"@nl ;
    rdfs:comment "Method property for the rule set."@en ;
    rdfs:domain [ a owl:Class ; owl:unionOf ( cpsv-ap:PublicService dcat:Dataset ) ] ;
    rdfs:range ronl:MethodConcept ;
    rdfs:isDefinedBy <https://regels.overheid.nl/ronl> .
#
# ronl:implementedBy is meant to indicate that a particular rule specification is implemented by some resource (like a public service or execution entity).
# rdfs:domain should be the type of entity that "is implemented by" something else. In this case, it would be a cpsv-ap:RuleSpecification.
# rdfs:range should be the type of entity that does the implementing (e.g., an executing service, resource, or algorithm), which we specified as rdfs:Resource to allow for flexibility.
#
# By defining ronl:implementedBy as the inverse of ronl:implements, the domain and range values will "mirror" each other, meaning:
# The domain of ronl:implements will become the range of ronl:implementedBs, and vice versa.
#
ronl:implementedBy a owl:ObjectProperty ;
    rdfs:label "implementatie"@nl ;
    rdfs:label "implementation"@en ;
    rdfs:comment "Specificeert de implementatie door een bepaalde uitvoering of dienst van de bedrijfsregel."@nl ;
    rdfs:comment "Specifies the implementation by a particular execution or service of the business rule."@en ;
    #
    # Specifies that ronl:implementedBy should be used with instances of cpsv-ap:RuleSpecification.
    #
    rdfs:domain cpsv-ap:RuleSpecification ;
    rdfs:range rdfs:Resource ;
    owl:inverseOf ronl:implements ;
    rdfs:isDefinedBy <https://regels.overheid.nl/ronl> .
#
# ronl:implements is the inverse, meaning it should indicate that a specific resource implements a certain rule specification.
# rdfs:domain should be the entity that does the implementing, a general rdfs:Resource in this model, allowing for broader applicability.
# rdfs:range should point back to the entity that is implemented, namely cpsv-ap:RuleSpecification.
#
# By defining ronl:implements as the inverse of ronl:implementedBy, the domain and range values will "mirror" each other, meaning:
# The domain of ronl:implementedBy will become the range of ronl:implements, and vice versa.
#
ronl:implements a owl:ObjectProperty ;
    rdfs:label "implementeert"@nl ;
    rdfs:label "implements"@en ;
    rdfs:comment "Specificeert de bedrijfsregel die wordt geïmplementeerd door een bepaalde uitvoering of dienst."@nl ;
    rdfs:comment "Specifies the business rule that is implemented by a given execution or service."@en ;
    rdfs:domain rdfs:Resource ;
    rdfs:range cpsv-ap:RuleSpecification ;
    owl:inverseOf ronl:implementedBy ;
    rdfs:isDefinedBy <https://regels.overheid.nl/ronl> .
#
# Define individual concepts within the AnalysisConcept scheme
# 
ex:WetsanalyseJAS a skos: ;
    skos:inScheme ronl: ;
    skos:prefLabel "Wetsanalyse (JAS)"@nl ;
    skos:prefLabel "Legal Analysis (JAS)"@en ;
    isothes:member ronl:AnalysisConcept .

ex:WetsanalyseJRM a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Wetsanalyse (JRM)"@nl ;
    skos:prefLabel "Legal Analysis (JRM)"@en ;
    isothes:member ronl:AnalysisConcept .

ex:FLINT a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "FLINT"@nl ;
    skos:prefLabel "FLINT"@en ;
    isothes:member ronl:AnalysisConcept .
#
# Define individual concepts within the MethodConcept scheme
#
ex:AKN4EU a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "AKN4EU"@nl ;
    skos:prefLabel "AKN4EU"@en ;
    isothes:member ronl:MethodConcept .
ex:ALEF a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "ALEF"@nl ;
    skos:prefLabel "ALEF"@en ;
    isothes:member ronl:MethodConcept .

ex:Avola a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Avola"@nl ;
    skos:prefLabel "Avola"@en ;
    isothes:member ronl:MethodConcept .

ex:Beinformed a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Beinformed"@nl ;
    skos:prefLabel "Beinformed"@en ;
    isothes:member ronl:MethodConcept .

ex:Blawx a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Blawx"@nl ;
    skos:prefLabel "Blawx"@en ;
    isothes:member ronl:MethodConcept .

ex:Blueriq a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Blueriq"@nl ;
    skos:prefLabel "Blueriq"@en ;
    isothes:member ronl:MethodConcept .

ex:Catala a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Catala"@nl ;
    skos:prefLabel "Catala"@en ;
    isothes:member ronl:MethodConcept .

ex:CircuLaw a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "CircuLaw"@nl; 
    skos:prefLabel "CircuLaw"@en ;
    isothes:member ronl:MethodConcept .

ex:ConcordiaLegal a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Concordia Legal"@nl ;
    skos:prefLabel "Concordia Legal"@en ;
    isothes:member ronl:MethodConcept .

ex:DataLex a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "DataLex"@nl ;
    skos:prefLabel "DataLex"@en ;
    isothes:member ronl:MethodConcept .

ex:Demo a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "DEMO"@nl ;
    skos:prefLabel "DEMO"@en ;
    isothes:member ronl:MethodConcept .

ex:Leos a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "LEOS"@nl ;
    skos:prefLabel "LEOS"@en ;
    isothes:member ronl:MethodConcept .

ex:OpenFisca a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "OpenFisca"@nl ;
    skos:prefLabel "OpenFisca"@en ;
    isothes:member ronl:MethodConcept .

ex:RuleSpeak a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "RuleSpeak"@nl ;
    skos:prefLabel "RuleSpeak"@en ;
    isothes:member ronl:MethodConcept .

ex:Sparkwise a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Sparkwise"@nl ;
    skos:prefLabel "Sparkwise"@en ;
    isothes:member ronl:MethodConcept .
    
ex:USoft a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "USoft"@nl ;
    skos:prefLabel "USoft"@en ;
    isothes:member ronl:MethodConcept .
#
# Define individual concepts within the SpecificationTypeConcept scheme
#
ex:FunctioneelOntwerp a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Functioneel Ontwerp"@nl ;
    skos:prefLabel "Functional Design"@en ;
    isothes:member ronl:SpecificationTypeConcept .

ex:SoftwareCode a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Software code"@nl ;
    skos:prefLabel "Software code"@en ;
    isothes:member ronl:SpecificationTypeConcept .

ex:UXDesign a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "UX Design"@nl ;
    skos:prefLabel "UX Design"@en ;
    isothes:member ronl:SpecificationTypeConcept .

ex:Communicatiemiddel a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Communicatiemiddel"@nl ;
    skos:prefLabel "Communications service"@en ;
    isothes:member ronl:SpecificationTypeConcept .

ex:Werkinstructie a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Werkinstructie"@nl ;
    skos:prefLabel "Work instruction"@en ;
    isothes:member ronl:SpecificationTypeConcept .

ex:Kwaliteitseisen a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Kwaliteitseisen"@nl ;
    skos:prefLabel "Quality Requirements"@en ;
    isothes:member ronl:SpecificationTypeConcept .

ex:BestuurlijkeInformatie a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Bestuurlijke Informatie"@nl ;
    skos:prefLabel "Business Intelligence"@en ;
    isothes:member ronl:SpecificationTypeConcept .

ex:Overig a skos:Concept ;
    skos:inScheme ronl: ;
    skos:prefLabel "Overig"@nl ;
    skos:prefLabel "Other"@en ;
    isothes:member ronl:SpecificationTypeConcept .
